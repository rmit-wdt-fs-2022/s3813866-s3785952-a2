@using Assignment2.Utility
@model Customer
@{
    ViewData["Title"] = "Accounts";
}

<div>
    <h1 class="display-4">Welcome, @Model.Name</h1>
    
    <h3>Your Accounts</h3>
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(x => x.Accounts[0].AccountNumber)</th>
            <th>@Html.DisplayNameFor(x => x.Accounts[0].AccountType)</th>
            <th>Balance</th>
            <th></th>
        </tr>
        @foreach(var account in Model.Accounts) {
            <tr>
                <td>@Html.DisplayFor(x => account.AccountNumber)</td>
                <td>@Html.DisplayFor(x => account.AccountType)</td>
                <td>@account.Transactions.CalculateAccountBalance().ToString("C")</td>
                <td>
                    <a class="btn btn-primary"
                       asp-action="Deposit" asp-route-id="@account.AccountNumber">Deposit</a>
                    <a class="btn btn-primary"
                       asp-action="Withdraw" asp-route-id="@account.AccountNumber">Withdraw</a>
                    <a class="btn btn-primary"
                       asp-action="Transfer" asp-route-id="@account.AccountNumber">Transfer</a>
                    @* <a class="btn btn-primary" *@
                    @*    asp-action="IndexToTransactions" asp-route-id="@account.AccountNumber">My Statements</a> *@
                </td>
                <td>
                    <form asp-action="IndexToTransactions">
                        <input type="hidden" name="accountNum" value="@account.AccountNumber" />
                        <input type="submit" class="btn btn-primary" value="My Transactions" />
                        </form>
                    </td>
            </tr>
        }
    </table>
</div>
